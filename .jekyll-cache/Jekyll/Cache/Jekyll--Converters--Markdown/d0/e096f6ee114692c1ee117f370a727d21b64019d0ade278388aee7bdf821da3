I"¥m<p>Softmax regression (hay c√≤n g·ªçi l√† multinomial logistic regression) l√† d·∫°ng c·ªßa h·ªìi quy logistic cho tr∆∞·ªùng h·ª£p c·∫ßn ph√¢n lo·∫°i nhi·ªÅu l·ªõp. Trong h·ªìi quy logistic ch√∫ng ta gi·∫£ s·ª≠ r·∫±ng c√°c nh√£n l√† c√°c gi√° tr·ªã nh·ªã ph√¢n $ y^{(i)} \in {0,1}$. Softmax regression cho ph√©p ch√∫ng ta th·ª±c hi·ªán ph√¢n lo·∫°i $ y^{(i)} \in {1,\ldots,K} $ v·ªõi K l√† s·ªë l·ªõp c·∫ßn d·ª± ƒëo√°n.</p>

<h1 id="ƒë·ªãnh-nghƒ©a-m√¥-h√¨nh">ƒê·ªãnh nghƒ©a m√¥ h√¨nh</h1>

<p>Ch√∫ng ta c√≥ t·∫≠p d·ªØ li·ªáu hu·∫•n luy·ªán ${ (x^{(1)}, y^{(1)}), \ldots, (x^{(m)}, y^{(m)}) }$ v·ªõi m d·ªØ li·ªáu ƒë∆∞·ª£c ƒë√°nh nh√£n v·ªõi input features x $ x^{(i)} \in \Re^{n}$. V·ªõi h·ªìi quy logistic ch√∫ng ta c√≥ m√¥ h√¨nh ph√¢n lo·∫°i nh·ªã ph√¢n, v√¨ v·∫≠y $y^{(i)} \in {0,1} $. Ch√∫ng ta c√≥ gi·∫£ thi·∫øt sau:</p>

<p>\(\begin{align} h_\theta(x) = \frac{1}{1+\exp(-\theta^\top x)}, \end{align}\)
V√† tham s·ªë m√¥ h√¨nh Œ∏ ƒë√£ ƒë∆∞·ª£c hu·∫•n luy·ªán ƒë·ªÉ t·ªëi ∆∞u h√†m chi ph√≠</p>

\[\begin{align} J(\theta) = -\left[ \sum_{i=1}^m y^{(i)} \log h_\theta(x^{(i)}) + (1-y^{(i)}) \log (1-h_\theta(x^{(i)})) \right] \end{align}\]

<p>Trong  softmax regression, ch√∫ng ta quan t√¢m t·ªõi vi·ªác ph√¢n lo·∫°i nhi·ªÅu l·ªõp v√† nh√£n y c√≥ th·ªÉ l√† 1 trong K gi√° tr·ªã kh√°c nhau thay v√¨ ch·ªâ 2 nh∆∞ logistic. V√¨ v·∫≠y trong t·∫≠p hu·∫•n luy·ªán ${ (x^{(1)}, y^{(1)}), \ldots, (x^{(m)}, y^{(m)}) }$, ch√∫ng ta c√≥ $y^{(i)} \in {1, 2, \ldots, K}$ (ch√∫ √Ω ch√∫ng ta quy ∆∞·ªõc s·∫Ω ƒë√°nh ch·ªâ s·ªë cho c√°c l·ªõp b·∫Øt ƒë·∫ßu t·ª´ 1, thay v√¨ t·ª´ 0). V√≠ d·ª• trong nh·∫≠n di·ªán s·ªë vi·∫øt tay d√πng t·∫≠p MNIST, ch√∫ng ta s·∫Ω c√≥ K=10 l·ªõp kh√°c nhau.
<br />
Cho 1 d·ªØ li·ªáu ƒë·∫ßu v√†o x, ch√∫ng ta c·∫ßn ph·∫£i ∆∞·ªõc l∆∞·ª£ng ƒë∆∞·ª£c x√°c xu·∫•t thu·ªôc v√†o 1 l·ªõp n√†o ƒë√≥ $ P(y=k | x) $ v·ªõi $ k = 1, \ldots, K $. S·∫Ω c√≥ K gi√° tr·ªã x√°c su·∫•t kh√°c nhau, v√¨ v·∫≠y gi·∫£ thi·∫øt c·ªßa ch√∫ng ta s·∫Ω ƒë∆∞a ra vector K chi·ªÅu g·ªìm c√°c gi√° tr·ªã x√°c su·∫•t. C·ª• th·ªÉ, gi·∫£ thi·∫øt $ h_{\theta}(x) $ s·∫Ω c√≥ d·∫°ng:</p>

\[\begin{align} h_\theta(x) = \begin{bmatrix} P(y = 1 | x; \theta) \\ P(y = 2 | x; \theta) \\ \vdots \\ P(y = K | x; \theta) \end{bmatrix} = \frac{1}{ \sum_{j=1}^{K}{\exp(\theta^{(j)\top} x) }} \begin{bmatrix} \exp(\theta^{(1)\top} x ) \\ \exp(\theta^{(2)\top} x ) \\ \vdots \\ \exp(\theta^{(K)\top} x ) \\ \end{bmatrix} \end{align}\]

<p>V·ªõi $ \theta^{(1)}, \theta^{(2)}, \ldots, \theta^{(K)} \in \Re^{n}$ l√† c√°c tham s·ªë c·ªßa m√¥ h√¨nh. ƒê·ªÉ √Ω t·ªïng $\frac{1}{ \sum_{j=1}^{K}{\exp(\theta^{(j)\top} x) } }$ ta ti·∫øn h√†nh nh√¢n v√†o ƒë·ªÉ chu·∫©n h√≥a ph√¢n ph·ªëi, v√¨ v·∫≠y t·ªïng c√°c ph·∫ßn t·ª≠ c·ªßa $ h_\theta(x)$ s·∫Ω b·∫±ng 1.</p>

<p>ƒê·ªÉ thu·∫≠n ti·ªán, ch√∫ng ta s·∫Ω vi·∫øt $\theta$ ƒë·∫°i di·ªán cho c√°c tham s·ªë c·ªßa m√¥ h√¨nh. Khi th·ª±c hi·ªán implement b·∫±ng code s·∫Ω d·ªÖ h∆°n bi·ªÉu di·ªÖn $\theta$ b·∫±ng ma tr·∫≠n nxK, $\theta$  thu ƒë∆∞·ª£c b·∫±ng c√°ch g·ªôp $\theta^{(1)}, \theta^{(2)}, \ldots, \theta^{(K)}$ v√†o c√°c c·ªôt nh∆∞ sau:</p>

\[\theta = \left[\begin{array}{cccc}| &amp; | &amp; | &amp; | \\ \theta^{(1)} &amp; \theta^{(2)} &amp; \cdots &amp; \theta^{(K)} \\ | &amp; | &amp; | &amp; | \end{array}\right]\]

<h2 id="h√†m-chi-ph√≠-c·ªßa-m√¥-h√¨nh">H√†m chi ph√≠ c·ªßa m√¥ h√¨nh</h2>

<p>B√¢y gi·ªù ch√∫ng ta s·∫Ω xem h√†m chi ph√≠ c·ªßa m√¥ h√¨nh Softmax Regression
\(\begin{align} J(\theta) = - \left[ \sum_{i=1}^{m} \sum_{k=1}^{K}  1\left\{y^{(i)} = k\right\} \log \frac{\exp(\theta^{(k)\top} x^{(i)})}{\sum_{j=1}^K \exp(\theta^{(j)\top} x^{(i)})}\right] \end{align}\)</p>

<p>Trong bi·ªÉu th·ª©c tr√™n, h√†m chi ph√≠ s·ª≠ d·ª•ng c√°ch vi·∫øt nh∆∞ ‚Äúh√†m ch·ªâ d·∫´n (indicator function)‚Äù, k√Ω hi·ªáu 1{n·∫øu bi·ªÉu th·ª©c ƒë√∫ng} = 1 v√† 1{n·∫øu bi·ªÉu th·ª©c sai}=0. ·ªû ƒë√¢y, $ 1\left{y^{(i)} = k\right} $ s·∫Ω = 1 n·∫øu $y^{(i)} = k$ v√† = 0 n·∫øu ng∆∞·ª£c l·∫°i.</p>

<p>Nh·∫Øc l·∫°i 1 ch√∫t, nh∆∞ v·∫≠y h√†m chi ph√≠ c·ªßa h·ªìi quy logistic c√≥ th·ªÉ vi·∫øt d∆∞·ªõi d·∫°ng:</p>

\[\begin{align} J(\theta) &amp;= - \left[ \sum_{i=1}^m   (1-y^{(i)}) \log (1-h_\theta(x^{(i)})) + y^{(i)} \log h_\theta(x^{(i)}) \right] \\ &amp;= - \left[ \sum_{i=1}^{m} \sum_{k=0}^{1} 1\left\{y^{(i)} = k\right\} \log P(y^{(i)} = k | x^{(i)} ; \theta) \right] \end{align}\]

<p>L√∫c n√†y h√†m chi ph√≠ c·ªßa Logistic regression nh√¨n kh√° gi·ªëng v·ªõi h√†m chi ph√≠ c·ªßa Softmax regression, ch·ªâ kh√°c l√† ch√∫ng ta t√≠nh t·ªïng c√°c x√°c su·∫•t c·ªßa K l·ªõp kh√°c nhau. Nh∆∞ v·∫≠y:</p>

<p>\(P(y^{(i)} = k | x^{(i)} ; \theta) = \frac{\exp(\theta^{(k)\top} x^{(i)})}{\sum_{j=1}^K \exp(\theta^{(j)\top} x^{(i)}) }\)
B·∫±ng c√°ch ƒë·∫°o h√†m J(Œ∏), ch√∫ng ta s·∫Ω t√¨m ƒë∆∞·ª£c gradient nh∆∞ sau:</p>

\[\begin{align} \nabla_{\theta^{(k)}} J(\theta) = - \sum_{i=1}^{m}{ \left[ x^{(i)} \left( 1\{ y^{(i)} = k\}  - P(y^{(i)} = k | x^{(i)}; \theta) \right) \right]  } \end{align}\]

<p>$‚Äù\nabla_{\theta^{(k)}}‚Äù$ l√† 1 vector c√≥ ph·∫ßn t·ª≠ th·ª≠ j l√† $\frac{\partial J(\theta)}{\partial \theta_{lk}}$ l√† ƒë·∫°o h√†m ri√™ng c·ªßa $J(\theta) $ ƒë·ªëi v·ªõi ph·∫ßn t·ª≠ th·ª© j c·ªßa $\theta(k)$</p>

<h1 id="m·ªëi-li√™n-h·ªá-v·ªõi-logistic-regression">M·ªëi li√™n h·ªá v·ªõi Logistic Regression</h1>

<p>Trong tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát v·ªõi K=2, ch√∫ng ta c√≥ th·ªÉ th·∫•y d·∫°ng c·ªßa softmax regression ƒë∆∞·ª£c chuy·ªÉn th√†nh logistic regression. ƒêi·ªÅu n√†y cho ta th·∫•y softmax regression l√† kh√°i qu√°t c·ªßa logistic regression.</p>

\[\begin{align} h_\theta(x) &amp;=  \frac{1}{ \exp(\theta^{(1)\top}x)  + \exp( \theta^{(2)\top} x^{(i)} ) } \begin{bmatrix} \exp( \theta^{(1)\top} x ) \\ \exp( \theta^{(2)\top} x ) \end{bmatrix} \end{align}\]

<p>\(\begin{align} h(x) &amp;=  \frac{1}{ \exp( (\theta^{(1)}-\theta^{(2)})^\top x^{(i)} ) + \exp(\vec{0}^\top x) } \begin{bmatrix} \exp( (\theta^{(1)}-\theta^{(2)})^\top x ) \exp( \vec{0}^\top x ) \\ \end{bmatrix} \\  &amp;= \begin{bmatrix} \frac{1}{ 1 + \exp( (\theta^{(1)}-\theta^{(2)})^\top x^{(i)} ) } \\ \frac{\exp( (\theta^{(1)}-\theta^{(2)})^\top x )}{ 1 + \exp( (\theta^{(1)}-\theta^{(2)})^\top x^{(i)} ) } \end{bmatrix} \\  &amp;= \begin{bmatrix} \frac{1}{ 1  + \exp( (\theta^{(1)}-\theta^{(2)})^\top x^{(i)} ) } \\ 1 - \frac{1}{ 1  + \exp( (\theta^{(1)}-\theta^{(2)})^\top x^{(i)} ) } \\ \end{bmatrix} \end{align}\)
Sau ƒë√≥ ta thay $\theta^{(2)}-\theta^{(1)} $ v·ªõi 1 tham s·ªë duy nh·∫•t l√† $\theta‚Äô$. Ch√∫ng ta s·∫Ω c√≥ softmax regression d·ª± ƒëo√°n x√°c su·∫•t 1 l·ªõp l√† $\frac{1}{ 1 + \exp(- (\theta‚Äô)^\top x^{(i)} ) }$, l·ªõp c√≤n l·∫°i l√† $1 - \frac{1}{ 1 + \exp(- (\theta‚Äô)^\top x^{(i)} ) }$. Gi·ªëng h·ªát v·ªõi h·ªìi quy logistic</p>

<h1 id="l·∫≠p-tr√¨nh-b·∫±ng-python">L·∫≠p tr√¨nh b·∫±ng python</h1>

<p>Trong ph·∫ßn n√†y m√¨nh s·∫Ω h∆∞·ªõng d·∫´n m·ªçi ng∆∞·ªùi th·ª±c hi·ªán ph√¢n lo·∫°i d·ª±a tr√™n t·∫≠p Iris. C√°c b·∫°n c√≥ th·ªÉ t·∫£i v·ªÅ t·∫°i ƒë√¢y</p>

<p>https://github.com/WinVector/Logistic/blob/master/iris.data.txt</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="nn">sklearn.cross_validation</span> <span class="kn">import</span> <span class="n">train_test_split</span>
<span class="kn">import</span> <span class="nn">math</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="p">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s">'ignore'</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">phi</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">theta</span><span class="p">,</span><span class="n">x</span><span class="p">):</span>  <span class="c1">#i goes from 1 to k
</span>    <span class="n">mat_theta</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">theta</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
    <span class="n">mat_x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">num</span> <span class="o">=</span> <span class="n">math</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">mat_theta</span><span class="p">,</span><span class="n">mat_x</span><span class="p">.</span><span class="n">T</span><span class="p">))</span>
    <span class="n">den</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">k</span><span class="p">):</span>
        <span class="n">mat_theta_j</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">theta</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
        <span class="n">den</span> <span class="o">=</span> <span class="n">den</span> <span class="o">+</span> <span class="n">math</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">mat_theta_j</span><span class="p">,</span><span class="n">mat_x</span><span class="p">.</span><span class="n">T</span><span class="p">))</span>
    <span class="n">phi_i</span> <span class="o">=</span> <span class="n">num</span><span class="o">/</span><span class="n">den</span>
    <span class="k">return</span> <span class="n">phi_i</span>

<span class="k">def</span> <span class="nf">indicator</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">a</span> <span class="o">==</span> <span class="n">b</span><span class="p">:</span> <span class="k">return</span> <span class="mi">1</span>
    <span class="k">else</span><span class="p">:</span> <span class="k">return</span> <span class="mi">0</span>

<span class="k">def</span> <span class="nf">get__der_grad</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">theta</span><span class="p">):</span>
    <span class="nb">sum</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">0</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)])</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">m</span><span class="p">):</span>
        <span class="n">p</span> <span class="o">=</span> <span class="n">indicator</span><span class="p">(</span><span class="n">y</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">j</span><span class="p">)</span> <span class="o">-</span> <span class="n">phi</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">theta</span><span class="p">,</span><span class="n">x</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
        <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">+</span> <span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span><span class="n">p</span><span class="p">)</span>
    <span class="n">grad</span> <span class="o">=</span> <span class="o">-</span><span class="nb">sum</span><span class="o">/</span><span class="n">m</span>
    <span class="k">return</span> <span class="n">grad</span>

<span class="k">def</span> <span class="nf">gradient_descent</span><span class="p">(</span><span class="n">theta</span><span class="p">,</span><span class="n">alpha</span><span class="o">=</span> <span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="mi">10</span><span class="o">^</span><span class="mi">4</span><span class="p">),</span><span class="n">iters</span><span class="o">=</span><span class="mi">500</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">k</span><span class="p">):</span>
        <span class="k">for</span> <span class="nb">iter</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">iters</span><span class="p">):</span>
            <span class="n">theta</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">theta</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">-</span> <span class="n">alpha</span> <span class="o">*</span> <span class="n">get__der_grad</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">theta</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'running iterations'</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">theta</span>

<span class="k">def</span> <span class="nf">h_theta</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
    <span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">h_matrix</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">empty</span><span class="p">((</span><span class="n">k</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
    <span class="n">den</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">k</span><span class="p">):</span>
        <span class="n">den</span> <span class="o">=</span> <span class="n">den</span> <span class="o">+</span> <span class="n">math</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">thetadash</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">x</span><span class="p">.</span><span class="n">T</span><span class="p">))</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">k</span><span class="p">):</span>
        <span class="n">h_matrix</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">math</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">thetadash</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">x</span><span class="p">.</span><span class="n">T</span><span class="p">))</span>
    <span class="n">h_matrix</span> <span class="o">=</span> <span class="n">h_matrix</span><span class="o">/</span><span class="n">den</span>
    <span class="k">return</span> <span class="n">h_matrix</span>

<span class="n">iris</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'iris.data.txt'</span><span class="p">,</span><span class="n">header</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>
<span class="n">iris</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'sepal_length'</span><span class="p">,</span><span class="s">'sepal_width'</span><span class="p">,</span><span class="s">'petal_length'</span><span class="p">,</span><span class="s">'petal_width'</span><span class="p">,</span><span class="s">'class'</span><span class="p">]</span>

<span class="n">train</span><span class="p">,</span> <span class="n">test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">iris</span><span class="p">,</span> <span class="n">test_size</span> <span class="o">=</span> <span class="mf">0.3</span><span class="p">)</span><span class="c1"># in this our main data is split into train and test
</span><span class="n">train</span> <span class="o">=</span> <span class="n">train</span><span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">test</span> <span class="o">=</span> <span class="n">test</span><span class="p">.</span><span class="n">reset_index</span><span class="p">()</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">train</span><span class="p">[[</span><span class="s">'sepal_length'</span><span class="p">,</span><span class="s">'sepal_width'</span><span class="p">,</span><span class="s">'petal_length'</span><span class="p">,</span><span class="s">'petal_width'</span><span class="p">]]</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="n">m</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

<span class="n">y</span> <span class="o">=</span> <span class="n">train</span><span class="p">[</span><span class="s">'class'</span><span class="p">]</span>
<span class="n">k</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">y</span><span class="p">.</span><span class="n">unique</span><span class="p">())</span>
<span class="n">y</span> <span class="o">=</span><span class="n">y</span><span class="p">.</span><span class="nb">map</span><span class="p">({</span><span class="s">'Iris-setosa'</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="s">'Iris-versicolor'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="s">'Iris-virginica'</span><span class="p">:</span><span class="mi">2</span><span class="p">})</span>
<span class="n">y</span><span class="p">.</span><span class="n">value_counts</span><span class="p">()</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>K·∫øt qu·∫£</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>0    38
2    35
1    32
Name: class, dtype: int64
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">x</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="n">x</span><span class="p">.</span><span class="n">shape</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">theta</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">empty</span><span class="p">((</span><span class="n">k</span><span class="p">,</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="n">theta_dash</span> <span class="o">=</span> <span class="n">gradient_descent</span><span class="p">(</span><span class="n">theta</span><span class="p">)</span>
<span class="n">x_u</span> <span class="o">=</span> <span class="n">test</span><span class="p">[[</span><span class="s">'sepal_length'</span><span class="p">,</span><span class="s">'sepal_width'</span><span class="p">,</span><span class="s">'petal_length'</span><span class="p">,</span><span class="s">'petal_width'</span><span class="p">]]</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">x_u</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="n">m</span> <span class="o">=</span> <span class="n">x_u</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="c1">#theta_dash: array([[ 0.54750154,  1.46069551, -2.24366996, -1.0321951 ,  0.32658186],[ 0.76749424, -0.27807236, -0.57695025, -1.08978552,  0.30959322],[-0.90090227, -0.79051953,  1.31002273,  1.09595382, -0.45057825]])
</span>

<span class="n">y_true</span> <span class="o">=</span> <span class="n">test</span><span class="p">[</span><span class="s">'class'</span><span class="p">]</span>
<span class="n">k</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">y_true</span><span class="p">.</span><span class="n">unique</span><span class="p">())</span>
<span class="n">y_true</span> <span class="o">=</span><span class="n">y_true</span><span class="p">.</span><span class="nb">map</span><span class="p">({</span><span class="s">'Iris-setosa'</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="s">'Iris-versicolor'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="s">'Iris-virginica'</span><span class="p">:</span><span class="mi">2</span><span class="p">})</span>
<span class="n">y_true</span><span class="p">.</span><span class="n">value_counts</span><span class="p">()</span>
<span class="c1">#1    18
#2    15
#0    12
#Name: class, dtype: int64
</span>
<span class="n">x_u</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="n">x_u</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="n">x_u</span><span class="p">.</span><span class="n">shape</span>

<span class="c1">#(45, 5)
</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="n">index</span><span class="p">,</span><span class="n">row</span> <span class="ow">in</span> <span class="n">x_u</span><span class="p">.</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="n">h_matrix</span> <span class="o">=</span> <span class="n">h_theta</span><span class="p">(</span><span class="n">row</span><span class="p">)</span>
    <span class="n">prediction</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">where</span><span class="p">(</span><span class="n">h_matrix</span> <span class="o">==</span> <span class="n">h_matrix</span><span class="p">.</span><span class="nb">max</span><span class="p">())[</span><span class="mi">0</span><span class="p">])</span>
    <span class="n">x_u</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">index</span><span class="p">,</span><span class="s">'prediction'</span><span class="p">]</span> <span class="o">=</span> <span class="n">prediction</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">results</span> <span class="o">=</span> <span class="n">x_u</span>
<span class="n">results</span><span class="p">[</span><span class="s">'actual'</span><span class="p">]</span> <span class="o">=</span> <span class="n">y_true</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">compare</span> <span class="o">=</span> <span class="n">results</span><span class="p">[</span><span class="s">'prediction'</span><span class="p">]</span> <span class="o">==</span> <span class="n">results</span><span class="p">[</span><span class="s">'actual'</span><span class="p">]</span>
<span class="n">correct</span> <span class="o">=</span> <span class="n">compare</span><span class="p">.</span><span class="n">value_counts</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span>
<span class="n">accuracy</span> <span class="o">=</span> <span class="n">correct</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">results</span><span class="p">)</span>
<span class="n">accuracy</span> <span class="o">*</span> <span class="mi">100</span>
<span class="c1">#95.555555555555557
</span></pre></td></tr></tbody></table></code></pre></div></div>
:ET